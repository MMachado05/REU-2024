<launch>
    <!-- ============== -->
    <!-- Node arguments -->
    <!-- ============== -->
    
    <arg name="preprocessor" default="easy_birdseye" />
    <arg name="lane_detector" default="kmeans" />

    <!-- =============== -->
    <!-- Topic arguments -->
    <!-- =============== -->
    <!-- <arg name="vehicle_namespace" value="robot1" /> -->

    <arg name="preprocessor_in_topic" value="camera/image_raw" />
    <arg name="preprocessed_img_topic" value="lane_preprocessed_img" />
    <arg name="lane_twist_topic" value="desired_twist" />

    <!-- === -->
    <!-- MAP -->
    <!-- === -->

    <param name="map_dir" value="$(find v2x_simulator)/map" />
    <rosparam command="load" file="$(find v2x_simulator)/map/lotH.yaml" />

    <!-- Robots -->
    <rosparam>
        robot_list: ["robot1", "robot2"]
    </rosparam>

    <!-- =================== -->
    <!-- =================== -->
    <!--       Vehicle       -->
    <!-- =================== -->
    <!-- =================== -->
    <!-- TODO: It would probably be nicer if these long ass vehicle-prep bits were each in
                their own launch files. -->

    <!-- ~~~~~~~~~~~~~~~~ -->
    <!-- Set up simulator -->
    <!-- ~~~~~~~~~~~~~~~~ -->
    <!-- Set up gazelle (comes with RQT Console set up) -->
    <include file="$(find gazelle_sim)/launch/gazelle_sim.launch" />

    <!-- Robot 1 -->
    <group ns="robot1">

        
        <rosparam command="load" file="$(find v2x_simulator)/robot/ACTor.yaml" />
        <rosparam>
            Xr_init: 17.69
            Yr_init: 29.95
            Theta_init: deg(180.0)
        </rosparam>

        

        <node
        name="final_gazelle_v2x_vc"
        pkg="vehicle_controllers_pkg"
        type="final_gazelle_v2x_vc.py"
        required="true"
        output="screen"
        >
        <param name="lane_twist_in_topic" type="str" value="$(arg lane_twist_topic)" />
        <param name="cmd_vel_out_topic" type="str" value="cmd_vel" />
        <param name="lane_name" type="str" value="eastbound"/>
        </node>

        

        <node
        name="lane_following_preprocessor"
        pkg="preprocessors_pkg"
        type="$(arg preprocessor)_preprocessor.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="$(arg preprocessor_in_topic)" />
        <param name="img_out_topic" type="str" value="$(arg preprocessed_img_topic)" />
        </node>



        <node
        name="lane_detector"
        pkg="lane_detectors_pkg"
        type="$(arg lane_detector)_lane_detector.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="$(arg preprocessed_img_topic)" />
        <param name="desired_twist_out_topic" type="str" value="$(arg lane_twist_topic)" />
        </node>

        

        <node
        name="crop_only_line_detection_preprocessor"
        pkg="preprocessors_pkg"
        type="crop_only_preprocessor.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="$(arg preprocessor_in_topic)" />
        <param name="img_out_topic" type="str" value="cropped_img" />
        </node>


        
        <node
        name="full_yellow_detector"
        pkg="yellow_detectors_pkg"
        type="full_yellow_detector.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="cropped_img" />
        <param name="decision_out_topic" type="str" value="yellow_detected" />
        </node>
    </group>

    <group ns="robot2">
        <!-- Robot Information -->

        <rosparam command="load" file="$(find v2x_simulator)/robot/ACTor.yaml" />
        <rosparam>
            Xr_init: 16.69
            Yr_init: 4.20
            Theta_init: deg(180.0)
        </rosparam>

        <!-- Vehicle Controller -->

        <node
        name="final_gazelle_v2x_vc"
        pkg="vehicle_controllers_pkg"
        type="final_gazelle_v2x_vc.py"
        required="true"
        output="screen"
        >
        <param name="lane_twist_in_topic" type="str" value="$(arg lane_twist_topic)" />
        <param name="cmd_vel_out_topic" type="str" value="cmd_vel" />
        <param name="lane_name" type="str" value="northbound"/>
        </node>

        <!-- ============ -->
        <!-- Preprocessor -->
        <!-- ============ -->

        <node
        name="lane_following_preprocessor"
        pkg="preprocessors_pkg"
        type="$(arg preprocessor)_preprocessor.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="$(arg preprocessor_in_topic)" />
        <param name="img_out_topic" type="str" value="$(arg preprocessed_img_topic)" />
        </node>

        <!-- ============= -->
        <!-- Lane detector -->
        <!-- ============= -->

        <node
        name="lane_detector"
        pkg="lane_detectors_pkg"
        type="$(arg lane_detector)_lane_detector.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="$(arg preprocessed_img_topic)" />
        <param name="desired_twist_out_topic" type="str" value="$(arg lane_twist_topic)" />
        </node>

        <!-- ============= -->
        <!-- Yellow Detect -->
        <!-- ============= -->

        <!-- Crop Preprocessing -->
        <node
        name="crop_only_line_detection_preprocessor"
        pkg="preprocessors_pkg"
        type="crop_only_preprocessor.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="$(arg preprocessor_in_topic)" />
        <param name="img_out_topic" type="str" value="cropped_img" />
        </node>

        <!-- Yellow Node-->
        <node
        name="full_yellow_detector"
        pkg="yellow_detectors_pkg"
        type="full_yellow_detector.py"
        required="true"
        output="screen"
        >
        <param name="img_in_topic" type="str" value="cropped_img" />
        <param name="decision_out_topic" type="str" value="yellow_detected" />
        </node>

    </group>

    <!-- RSU -->
    <include file="$(find traffic_light_pkg)/launch/start_nonadaptive_ns_with_runner.launch"></include>
    <include file="$(find traffic_light_pkg)/launch/start_nonadaptive_ns_control.launch"></include>

    <!-- Rosboard -->
    <include file="$(find rosboard)/launch/rosboard.launch"></include>

</launch>
