#!/usr/bin/env python
PACKAGE = "lane_follow_blob"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("enable_drive",                  bool_t,   0, "Enable Control Output", False)
gen.add("enable_forward",                bool_t,   0, "Enable/Disable Steering Only Mode", False)
gen.add("drive_speed",                   double_t, 0, "Drive Speed", 0.3, 0, 3)#

edge_enum = gen.enum([ gen.const("edge_method_BGR",          int_t, 0, "CannyBGR"),
                       gen.const("edge_method_grayscale",    int_t, 1, "CannyGS"),
                       gen.const("edge_method_adap_thresh",  int_t, 2, "AdapThresh"),
                       gen.const("edge_method_laplac_sobel", int_t, 3, "Laplace Sobel")],
                     "Edge Method")
gen.add("edge_method",                   int_t,    0, "Edge Method", 0, 0, 3, edit_method=edge_enum)

gen.add("canny_lower_thresh",            int_t,    0, "Canny Lower Threshold", 700, 10, 100000)#
gen.add("canny_upper_thresh",            int_t,    0, "Canny Upper Thresold", 2000, 10, 100000)#
gen.add("canny_aperture_size",           int_t,    0, "Canny Aperature Size", 2, 1, 3)#

gen.add("adap_use_gauss",                bool_t,   0, "Adaptive Thresh. Use Gauss", False)
gen.add("adap_block_size",               int_t,    0, "Adaptive Thresh. Block Size", 1, 0, 3)
gen.add("adap_c",                        double_t, 0, "Adaptive Thresh. C", 0, -255, 255)

gen.add("lapla_ksize",                   int_t,    0, "Laplacian kSize", 1, 0, 3)
gen.add("sobel_xorder",                  int_t,    0, "Sobel X Order", 1, 1, 10)
gen.add("sobel_yorder",                  int_t,    0, "Sobel Y Order", 1, 1, 10)
gen.add("sobel_ksize",                   int_t,    0, "Sobel kSize", 1, 1, 3)

gen.add("enhance_blur",                  int_t,    0, "Enhance Median Blur", 4, 1, 15)#

gen.add("blob_y",                        double_t, 0, "Blob Origin Y", .95, 0, 1)#
gen.add("blob_x",                        double_t, 0, "Blob Origin X", .5, 0, 1)#
gen.add("blob_coeff",                    double_t, 0, "Blob Spring Coeff", .1, 0, 1)#
gen.add("blob_len",                      double_t, 0, "Blob Spring Normal Length", .2, 0, 1)#
gen.add("blob_num_points",               int_t,    0, "Blob Rays Cast", 50, 10, 300)#
gen.add("blob_median_blur_size",         int_t,    0, "Blob Median Blur Size", 13, 0, 100)#
gen.add("blob_dilation_size",            int_t,    0, "Blob Dilation Size", 5, 1, 10)#
gen.add("blob_mult",                     double_t, 0, "Blob Output Mult", 3, 0, 15)#
gen.add("blob_max_p_y",                  double_t, 0, "Blob Max Point (y)", 0.7, 0, 1)

gen.add("lines_enable",                  bool_t,   0, "Enable Line Detection", True)#
gen.add("lines_thresh",                  int_t,    0, "Lines Threshold", 85, 0, 1000)#
gen.add("lines_rho",                     int_t,    0, "Lines rho", 2, 1, 10)#
gen.add("lines_min_len",                 int_t,    0, "Lines Min Len", 70, 0, 1000)#
gen.add("lines_max_gap",                 int_t,    0, "Lines Max Gap", 10, 0, 1000)#
gen.add("lines_top",                     double_t, 0, "Lines Top Limit", .53, 0, 1)#
gen.add("lines_max_slope",               double_t, 0, "Lines Max Slope", 1.7, 0, 10)#
gen.add("lines_min_slope",               double_t, 0, "Lines Min Slope", .5, 0, 10)#

gen.add("show_edge_detect",              bool_t,   0, "Show Canny Edges", False)
gen.add("show_result",                   bool_t,   0, "Show Processed Image", False)
gen.add("show_blob",                     bool_t,   0, "Show Blob Points/Edges", False)
gen.add("show_lines",                    bool_t,   0, "Show Hough Lines", False)

exit(gen.generate(PACKAGE, "lane_follow_blob", "Blob"))
