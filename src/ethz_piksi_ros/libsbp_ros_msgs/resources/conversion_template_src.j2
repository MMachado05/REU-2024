// This message is automatically generated using generator.py
// PLEASE DO NOT MODIFY MANUALLY.

#include "libsbp_ros_msgs/conversion.h"

namespace libsbp_ros_msgs {
((*- for spec in all_specs -*))
((*- for definition in spec.definitions *))

((((((definition.identifier)))|to_identifier))) convertSbpMsgToRosMsg(const ((((((definition.identifier)))|to_sbp_struct)))& sbp_msg, const uint8_t len)
{
  ((((((definition.identifier)))|to_identifier))) ros_msg;
  ((*- for field in definition.fields -*))
  ((*- if not 'reserved' in field.identifier -*))
  ((*- if ((((((field)))|is_default_type))) *))
  ros_msg.(((field.identifier))) = sbp_msg.(((field.identifier)));
  ((*- elif field.type_id == 'array' *))
  ((*- if ((((((field)))|is_default_array_type))) *))
  for (auto msg : sbp_msg.(((field.identifier))))
    ros_msg.(((field.identifier))).push_back(msg);
  ((*- else *))
  // Compute array size from message length and header size and array object size.
  for (size_t i = 0; i < (len - sizeof(sbp_msg)) / sizeof( *sbp_msg.(((field.identifier)))); ++i)
    ros_msg.(((field.identifier))).push_back(convertSbpMsgToRosMsg(sbp_msg.(((field.identifier)))[i]));
  ((*- endif -*))
  ((*- else *))
  ros_msg.(((field.identifier))) = convertSbpMsgToRosMsg(sbp_msg.(((field.identifier))));
  ((*- endif -*))
  ((*- endif -*))
  ((*- endfor *))
  return ros_msg;
}

((*- endfor -*))
((*- endfor *))

} // namespace libsbp_ros_msgs
